name: Publish Python Package to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  deploy:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel cython numpy

    - name: Run tests
      run: |
        pip install -e .[test]
        pytest

    - name: Build wheels
      if: matrix.os == 'ubuntu-latest'  # Only build once on Linux
      run: |
        python -m pip install build
        python -m build --sdist --wheel --outdir dist/

    - name: Build platform-specific wheels
      run: |
        python -m pip install cibuildwheel
        python -m cibuildwheel --output-dir wheelhouse

    - name: Combine artifacts
      if: matrix.os == 'ubuntu-latest'  # Only run once
      run: |
        mkdir -p dist
        cp wheelhouse/*.whl dist/ || true  # Ignore if no wheels exist

    - name: Publish to PyPI
      if: matrix.os == 'ubuntu-latest'  # Only publish once
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

    - name: Clean up
      run: rm -rf dist build *.egg-info wheelhouse